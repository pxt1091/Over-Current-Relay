P31 EQU 0B1H
P32 EQU 0B2H
P20 EQU 0A0H
P21 EQU 0A1H
P22 EQU 0A2H
P23 EQU 0A3H

ORG 0000H
LJMP START

ORG 0020H
MSG: DB 'IDMT 3 SEC ',0FH ; PUT CHARACTERISTIC
MSG1: DB 'Relay: I < 1A ',0FH
MSG2: DB 'Relay: I = 1A ',0FH
MSG3: DB 'Relay: I = 1.5A',0FH
MSG4: DB 'Relay: I = 2A',0FH
MSG5: DB 'Relay: I = 2.5A',0FH
MSG6: DB 'Relay: I = 3A',0FH
MSG7: DB 'Relay: I = 3.5A',0FH
MSG8: DB 'Relay: I = 4A',0FH
MSG9: DB 'Relay: I = 4.5A',0FH
MSG10: DB 'Relay: I = 5A',0FH

RELAY1: DB 'TIME DELAY:17.2s',0FH
RELAY2: DB 'TIME DELAY:10.0s',0FH
RELAY3: DB 'TIME DELAY:7.57s',0FH
RELAY4: DB 'TIME DELAY:6.30s',0FH
RELAY5: DB 'TIME DELAY:5.86s',0FH
RELAY6: DB 'TIME DELAY:5.22s',0FH
RELAY7: DB 'TIME DELAY:4.76s',0FH
RELAY8: DB 'TIME DELAY:4.58s',0FH
RELAY9: DB 'TIME DELAY:4.28s',0FH

ORG 0100H
START:  LCALL INTI
	MOV A,#01
	LCALL CMD
	MOV P3,#00
	SETB 0B0H
	MOV DPTR,#MSG
	MOV A,#80H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#01
	LCALL DELAY
START1: MOV P1,#0FFH
	SETB P23
	CLR P22
	CLR P21
	SETB P21 ; START AND ALE SIGNAL ACTIVATION
	NOP
	NOP
	NOP
	NOP
	CLR P21
HERE1:  JB P23, HERE1 ; EOC PIN POLLING
HERE2:  JNB P23, HERE2
	SETB P22 ; OE PIN TO READ THEOUT PUT
	NOP
	NOP
	MOV A, P1
	MOV R4,A
	CJNE A, #50,TEST1 ; VALUE FOR 1ST THRESHOLD
TEST1:  JNC OVER1
	MOV DPTR,#MSG1
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#01
	LCALL DELAY
	LJMP START1

OVER1:  CJNE A, #52,TEST2 ; VALUE FOR 2ND THRESHOLD
TEST2:  JNC OVER2
	
	MOV DPTR,#MSG2
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#17 ; LOAD THE DELAY COUNT
	LCALL DELAY ; GIVE THE VALUE DELAY WITH 1SEC X R6 TIMES
	MOV R6,#2 ;
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY1
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY:	SJMP STAY

OVER2:  CJNE A, #76,TEST3 ; VALUE FOR 3RD THRESHOLD
TEST3: 	JNC OVER3
	
	MOV DPTR,#MSG3
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#10 ;LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#1
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY2
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY112: SJMP STAY112

OVER3:	CJNE A, #102,TEST4 ;VALUE FOR 4TH THRES
TEST4: 	JNC OVER4
	
	MOV DPTR,#MSG4
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#7 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#5 ;
	LCALL DELAY1; ; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY3
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string

CLR 0B0H
STAY1:	SJMP STAY1

OVER4:	CJNE A, #127,TEST5 ; VALUE FOR 5TH THRESHOLD
TEST5:	JNC OVER5
	
	MOV DPTR,#MSG5
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#6 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#3
	LCALL DELAY1; ; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY4
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY2: 	SJMP STAY2

OVER5: 	CJNE A, #153,TEST6 ; VALUE FOR 6TH THRES
TEST6: 	JNC OVER6
	
	MOV DPTR,#MSG6
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#5 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#5 ;
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY5
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY11:	SJMP STAY11

OVER6:	CJNE A, #178,TEST7 ; VALUE FOR 7TH THRESHOLD
TEST7:	JNC OVER7
	
	MOV DPTR,#MSG7
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#4 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#9
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY6
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY21:	SJMP STAY21

OVER7:	CJNE A, #204,TEST8 ; VALUE FOR 8TH THRESHOLD
TEST8:	JNC OVER8
	
	MOV DPTR,#MSG8
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#4 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#5
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY7
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY23:	SJMP STAY23

OVER8:	CJNE A, #229,TEST9 ; VALUE FOR 9TH THRESHOLD
TEST9:	JNC OVER9

	MOV DPTR,#MSG9
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#4 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#2
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY8
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY24:	SJMP STAY24

OVER9: NOP ; 10TH THRESHOLD
	MOV DPTR,#MSG10
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
	MOV R6,#4 ; LOAD THE DELAY COUNT
	LCALL DELAY
	MOV R6,#1
	LCALL DELAY1; GIVES DELAY OF 100MSEC X R6 TIMES
	MOV DPTR,#RELAY9
	MOV A,#0C0H
	LCALL CMD
	LCALL DISPCH2 ; Display string
CLR 0B0H
STAY3:	SJMP STAY3

DELAY:	NOP
MAKENEW:MOV R7,#07 ; This delay function gives 1sec DELAY
REPT3: 	MOV R4,#0FFH ; R6 x 1sec will be the total delay

HERE3: 	MOV R5,#0FFH
REPEAT: DJNZ R5,REPEAT
	DJNZ R4,HERE3
	DJNZ R7, REPT3
	DJNZ R6, MAKENEW
	RET

DELAY1: NOP

REPT34: MOV R4,#7Fh ; THIS GIVES 100msec delay ; R6 x 100msec will be the tatoal delay

HERE334:  MOV R5,#0ffH
REPEAT23: DJNZ R5,REPEAT23
	DJNZ R4,HERE334
	DJNZ R6, REPT34
	RET

BCD:	MOV A,R4
	MOV R3,A
	CJNE A,#00H, SKIP2
	MOV R6,A
	MOV R7,A
	RET
SKIP2: 	CLR A
	MOV R7,A
UP1: 	ADD A,#01H
	DA A
	JNC SKP
	INC R7
SKP: 	DJNZ R3,UP1
	MOV R6,A
	RET

UNPACK: MOV A,R7
	ADD A,#30H
	MOV 62H,A
	MOV A,R6
	ANL A,#0FH
	ADD A,#30H
	MOV 60H,A
	MOV A,R6
	SWAP A
	ANL A,#0FH
	ADD A,#30H
	MOV 61H,A
	RET

INTI:	MOV A,#3CH
	LCALL CMD
	MOV A,#3CH
	LCALL CMD
	MOV A,#3CH
	LCALL CMD
	MOV A,#0EH
	LCALL CMD
	MOV A,#06H
	LCALL CMD
	MOV A,#01
	LCALL CMD
	RET

CMD: 	LCALL READY
	MOV P0,A
	CLR 0A5H ; LOW on RS
	CLR 0A6H
	SETB 0A7H ; HIGH to LOW on En line
	CLR 0A7H
	RET

DISP:	LCALL READY
	MOV P0, A
	SETB 0A5H ; HIGH RS
	CLR 0A6H ; LOW RW
	SETB 0A7H ; HIGH to LOW En line
	CLR 0A7H
	RET

READY:	CLR 0A7H ; Read busy flag
	MOV P0,#0FFH
	CLR 0A5H
	SETB 0A6H
WAIT:	CLR 0A7H
	SETB 0A7H
	JB 87H,WAIT
	RET

DISPCH2:NOP
UP11: 	CLR A
	MOVC A,@A+DPTR ; Use lookup table to get ASCII character
	CJNE A,#0FH,SKIP5
	RET
SKIP5: 	INC DPTR
	LCALL DISP
	SJMP UP11
END